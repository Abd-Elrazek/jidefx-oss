/*
 * Copyright (c) 2002-2015, JIDE Software Inc. All rights reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * This code is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 only, as
 * published by the Free Software Foundation.  Oracle designates this
 * particular file as subject to the "Classpath" exception as provided
 * by Oracle in the LICENSE file that accompanied this code.
 *
 * This code is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
 * version 2 for more details (a copy is included in the LICENSE file that
 * accompanied this code).
 *
 * You should have received a copy of the GNU General Public License version
 * 2 along with this work; if not, write to the Free Software Foundation,
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 */

apply plugin: 'jdepend'
apply plugin: 'checkstyle'
apply plugin: 'com.github.hierynomus.license'

def configDir = new File(buildscript.sourceFile.parentFile.parentFile, 'config')
ext.checkstyleConfigDir = "$configDir/checkstyle"

checkstyle {
    toolVersion = '6.0'
    configFile = new File(checkstyleConfigDir, 'checkstyle.xml')
    configProperties.checkstyleConfigDir = checkstyleConfigDir
}

if (project.hasProperty('findBugsEnabled') && project.findBugsEnabled.toBoolean()) {
    apply plugin: 'findbugs'
    findbugs {
        toolVersion = '3.0.0'
        sourceSets = [sourceSets.main]
        ignoreFailures = true
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = 'max'
        reportLevel = 'high'
    }

    findbugsMain {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }

    findbugsTest {
        reports {
            xml.enabled = false
            html.enabled = true
        }
    }
}


jdepend {
    toolVersion = '2.9.1'
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/reports/jdepend")
}

license {
    header = rootProject.file('config/HEADER')
    strictCheck = true
    ignoreFailures = true
    mapping {
        java   = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        fxml   = 'XML_STYLE'
    }
    ext.year = '2002-2015'
    exclude '**/*.png'
    exclude '**/*.ttf'
}

licenseTest {
    source -= sourceSets.test.resources
}

if (project.plugins.hasPlugin('groovy')) {
    apply plugin: 'codenarc'

    codenarc {
        ignoreFailures = true
        configFile = file("$configDir/codenarc/codenarc.groovy")
    }
}
